{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","utils/utils.ts","components/Form/TodoForm.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","title","classnames","completed","TodoList","todos","map","getMaxId","Math","max","getUserById","userId","usersFromServer","find","getValidTitle","match","join","TodoForm","onAddTodo","useState","setUserId","setTitle","hasTitleError","setHasTitleError","hasUserIdError","setHasUserIdError","action","method","onSubmit","event","preventDefault","htmlFor","type","placeholder","value","onChange","target","required","disabled","initialTodos","App","setTodos","newTodo","prevTodo","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.327ce1da.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { User } from '../../types/User';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  return (\n    <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n      {user.name}\n    </a>\n  );\n};\n","import React from 'react';\nimport classnames from 'classnames';\n\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const { id, title } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={classnames(\n        'TodoInfo',\n        {\n          'TodoInfo--completed': todo.completed,\n        },\n      )}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      {/* <UserInfo user={todo.user ?? null} /> */}\n      {todo.user && (\n        <UserInfo user={todo.user} />\n      )}\n    </article>\n  );\n};\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo/TodoInfo';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo\n          data-id={todo.id}\n          key={todo.id}\n          todo={todo}\n        />\n      ))}\n    </section>\n  );\n};\n","import usersFromServer from '../api/users';\nimport { Todo } from '../types/Todo';\n\nexport const getMaxId = (todos: Todo[]) => {\n  return Math.max(...todos.map(todo => todo.id));\n};\n\nexport const getUserById = (userId: number) => {\n  return usersFromServer.find(({ id }) => id === userId);\n};\n\nexport const getValidTitle = (title: string) => {\n  const regex = /[a-zA-Zа-яА-Я0-9\\s]/g;\n  const validTitle = title.match(regex)?.join('') || '';\n\n  return validTitle;\n};\n","import { useState } from 'react';\nimport usersFromServer from '../../api/users';\nimport { Todo } from '../../types/Todo';\nimport { getMaxId, getUserById, getValidTitle } from '../../utils/utils';\n\ntype Props = {\n  todos: Todo[];\n\n  onAddTodo: (newTodo: Todo) => void;\n};\n\nexport const TodoForm: React.FC<Props> = ({\n  todos,\n  onAddTodo,\n}) => {\n  const [userId, setUserId] = useState(0);\n  const [title, setTitle] = useState('');\n\n  const [hasTitleError, setHasTitleError] = useState(false);\n  const [hasUserIdError, setHasUserIdError] = useState(false);\n\n  const handleTitleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n    setHasTitleError(false);\n  };\n\n  const handleUserChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setUserId(+event.target.value);\n    setHasUserIdError(false);\n  };\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    setHasTitleError(!title);\n    setHasUserIdError(!userId);\n\n    if (!title || !userId) {\n      return;\n    }\n\n    onAddTodo({\n      id: getMaxId(todos) + 1,\n      title: getValidTitle(title),\n      completed: false,\n      userId,\n      user: getUserById(userId) || null,\n    });\n\n    setUserId(0);\n    setTitle('');\n  };\n\n  return (\n    <form\n      action=\"/api/todos\"\n      method=\"POST\"\n      onSubmit={handleSubmit}\n    >\n      <div className=\"field\">\n        <label htmlFor=\"title\">Title:&nbsp;</label>\n        <input\n          id=\"title\"\n          type=\"text\"\n          data-cy=\"titleInput\"\n          placeholder=\"Enter a title\"\n          value={title}\n          onChange={handleTitleChange}\n        />\n        {hasTitleError && (\n          <span className=\"error\">Please enter a title</span>\n        )}\n      </div>\n\n      <div className=\"field\">\n        <label htmlFor=\"user-id\">User:&nbsp;</label>\n\n        <select\n          id=\"user-id\"\n          data-cy=\"userSelect\"\n          required\n          value={userId}\n          onChange={handleUserChange}\n        >\n          <option value=\"0\" disabled>Choose a user</option>\n\n          {usersFromServer.map(user => (\n            <option\n              value={user.id}\n            >\n              {user.name}\n            </option>\n          ))}\n        </select>\n\n        {hasUserIdError && (\n          <span className=\"error\">Please choose a user</span>\n        )}\n      </div>\n\n      <button type=\"submit\" data-cy=\"submitButton\">\n        Add\n      </button>\n    </form>\n  );\n};\n","import React, { useState } from 'react';\n\nimport './App.scss';\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { TodoList } from './components/TodoList';\nimport { Todo } from './types/Todo';\nimport { TodoForm } from './components/Form/TodoForm';\n\nconst initialTodos: Todo[] = todosFromServer.map((todo) => {\n  const user = usersFromServer.find(({ id }) => id === todo.userId) || null;\n\n  return {\n    ...todo,\n    user,\n  };\n});\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState(initialTodos);\n\n  const handleAddTodo = (newTodo: Todo) => {\n    setTodos((prevTodo: Todo[]) => ([...prevTodo, newTodo]));\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <TodoForm\n        onAddTodo={handleAddTodo}\n        todos={todos}\n      />\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}